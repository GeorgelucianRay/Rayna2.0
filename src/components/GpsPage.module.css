/* GpsPage.module.css — versiune modernă/futuristă (drop-in) */

/* Best practice: box-sizing */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* ===== GRID ===== */
.locationGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: 1.25rem;
  margin-bottom: 2rem;
}

/* ===== CARD ===== */
.locationCard {
  position: relative;
  overflow: hidden;
  height: 200px;
  border-radius: 1rem;
  cursor: pointer;
  background: linear-gradient(180deg, rgba(9,12,20,0.6), rgba(17,24,39,0.55));
  border: 1px solid rgba(148,163,184,0.22);
  box-shadow: 0 16px 40px -20px rgba(0,0,0,0.6);
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  transition: transform 180ms ease, box-shadow 180ms ease, border-color 180ms ease;
}
.locationCard:hover {
  transform: translateY(-4px);
  border-color: rgba(255,140,58,0.45);
  box-shadow: 0 22px 54px -24px rgba(255,106,0,0.45);
}
.locationCard::after {
  content: "";
  position: absolute;
  inset: -2px;
  border-radius: 1.2rem;
  pointer-events: none;
  background: radial-gradient(1000px 800px at var(--mx, 50%) var(--my, 0%), rgba(255,140,58,0.08), transparent 45%);
  opacity: 0;
  transition: opacity 200ms ease;
}
.locationCard:hover::after { opacity: 1; }

/* Img */
.locationCardImage {
  width: 100%;
  height: 100%;
  object-fit: cover;
  filter: saturate(1.05) contrast(1.03);
  transition: transform 300ms ease, filter 300ms ease;
}
.locationCard:hover .locationCardImage {
  transform: scale(1.03);
  filter: saturate(1.1) contrast(1.06);
}

/* Overlay + Title */
.locationCardOverlay {
  position: absolute;
  inset: auto 0 0 0;
  background: linear-gradient(180deg, transparent, rgba(0,0,0,0.35), rgba(0,0,0,0.85));
  padding: 1.35rem 1rem 1rem;
  pointer-events: none;
}
.locationCardTitle {
  margin: 0;
  font-size: 1.08rem;
  font-weight: 800;
  letter-spacing: 0.2px;
  color: #ffffff;
  text-shadow: 0 2px 10px rgba(0,0,0,0.45);
}

/* Edit button (pe card) */
.locationCardEditBtn {
  position: absolute;
  top: 0.65rem;
  right: 0.65rem;
  z-index: 2;
  opacity: 0;
  border: 1px solid rgba(148,163,184,0.28);
  background: rgba(17,24,39,0.75);
  color: #e5e7eb;
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  padding: 0.45rem;
  border-radius: 0.55rem;
  transition: opacity 160ms ease, transform 160ms ease, background-color 160ms ease, border-color 160ms ease;
}
.locationCard:hover .locationCardEditBtn { opacity: 1; }
.locationCardEditBtn:hover {
  transform: translateY(-1px);
  background: rgba(59,130,246,0.9);
  border-color: rgba(59,130,246,0.4);
  color: #fff;
}

/* ===== MODAL ===== */
.modalOverlay {
  position: fixed;
  inset: 0;
  z-index: 1000;
  display: grid;
  place-items: center;
  padding: 1rem;
  background: radial-gradient(1200px 800px at 50% 30%, rgba(0,0,0,0.55), rgba(0,0,0,0.82));
  backdrop-filter: blur(6px);
  -webkit-backdrop-filter: blur(6px);
  animation: fadeIn 0.18s ease-out;
}
@keyframes fadeIn { from { opacity: 0; } to { opacity: 1; } }

.modalContent {
  width: 100%;
  max-width: 520px;
  max-height: 90vh;
  display: flex;
  flex-direction: column;
  background: linear-gradient(180deg, rgba(10,12,20,0.86), rgba(17,24,39,0.9));
  border: 1px solid rgba(148,163,184,0.25);
  border-radius: 1rem;
  box-shadow: 0 40px 90px -20px rgba(0,0,0,0.72);
  overflow: hidden;
  animation: slideUp 0.25s ease-out;
}
@keyframes slideUp { from { transform: translateY(16px); opacity: 0; } to { transform: translateY(0); opacity: 1; } }

.locationModal { max-width: 640px; }

.modalHeader {
  display: flex; justify-content: space-between; align-items: center;
  padding: 1.25rem 1.25rem 1rem;
  border-bottom: 1px solid rgba(148,163,184,0.18);
  background: linear-gradient(180deg, rgba(31,41,55,0.5), rgba(31,41,55,0.3));
}
.modalTitle {
  margin: 0;
  font-size: 1.25rem;
  font-weight: 800;
  letter-spacing: 0.2px;
  background: linear-gradient(90deg, #fff, #ffd7b1, #ff8c3a);
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
}
.modalHeaderActions { display: flex; gap: 0.5rem; align-items: center; }
.editButtonModal,
.closeButton {
  background: transparent;
  border: 1px solid rgba(148,163,184,0.28);
  color: #cbd5e1;
  padding: 0.45rem;
  border-radius: 0.55rem;
  cursor: pointer;
  transition: background-color 160ms ease, color 160ms ease, transform 160ms ease, border-color 160ms ease;
}
.editButtonModal:hover,
.closeButton:hover {
  background: rgba(255,255,255,0.08);
  color: #fff;
  transform: translateY(-1px);
}

.modalBody {
  padding: 1.1rem 1.25rem 1.25rem;
  flex: 1;
  overflow-y: auto;
}

.locationModalImage {
  width: 100%;
  max-height: 260px;
  object-fit: cover;
  border-radius: 0.7rem;
  margin-bottom: 0.9rem;
  border: 1px solid rgba(148,163,184,0.18);
}

.locationDetails {
  display: flex;
  flex-direction: column;
  gap: 0.65rem;
}
.locationDetails p { margin: 0; color: #dbe4ef; line-height: 1.55; }
.locationDetails strong { color: #fff; }

.modalFooter {
  padding: 1rem 1.25rem 1.2rem;
  border-top: 1px solid rgba(148,163,184,0.18);
  display: flex; gap: 0.75rem; justify-content: flex-end;
  background: linear-gradient(180deg, rgba(31,41,55,0.45), rgba(31,41,55,0.25));
}

/* Buttons în modal */
.modalButton {
  padding: 0.6rem 1.15rem;
  border-radius: 0.6rem;
  font-weight: 700;
  border: 1px solid transparent;
  cursor: pointer;
  transition: transform 160ms ease, box-shadow 160ms ease, background-color 160ms ease, border-color 160ms ease;
  font-size: 0.92rem;
}
.modalButtonPrimary {
  background: linear-gradient(135deg, #ff8c3a, #ff6a00);
  color: #0b0f1a;
  border: 1px solid rgba(255,140,58,0.55);
  box-shadow: 0 10px 28px -12px rgba(255,106,0,0.45), inset 0 0 0 1px rgba(255,255,255,0.06);
}
.modalButtonPrimary:hover { transform: translateY(-2px); }
.modalButtonSecondary {
  background: linear-gradient(180deg, rgba(255,255,255,0.12), rgba(255,255,255,0.06));
  color: #f3f4f6;
  border: 1px solid rgba(255,255,255,0.26);
}
.modalButtonSecondary:hover { background: rgba(255,255,255,0.18); }
.irButton { display: inline-flex; align-items: center; justify-content: center; text-decoration: none; }
.irButton:disabled { opacity: 0.55; cursor: not-allowed; }

/* ===== FORM ===== */
.formWrapper { display: flex; flex-direction: column; height: 100%; }

.inputGroup { margin-bottom: 0.9rem; }
.inputGroupFullWidth { grid-column: 1 / -1; }

.inputGroup label {
  display: block;
  margin-bottom: 0.4rem;
  font-weight: 800;
  color: #e5e7eb;
  font-size: 0.9rem;
  letter-spacing: 0.2px;
}

.inputGroup input,
.inputGroup select,
.inputGroup textarea {
  width: 100%;
  padding: 0.7rem 0.9rem;
  border-radius: 0.6rem;
  border: 1px solid rgba(148,163,184,0.28);
  background: linear-gradient(180deg, rgba(255,255,255,0.06), rgba(255,255,255,0.02));
  color: #f1f5f9;
  font-size: 0.95rem;
  transition: border-color 160ms ease, box-shadow 160ms ease, background-color 160ms ease;
}
.inputGroup input:focus,
.inputGroup select:focus,
.inputGroup textarea:focus {
  outline: none;
  border-color: rgba(255,140,58,0.72);
  box-shadow: 0 0 0 3px rgba(255,140,58,0.25);
}
.inputGroup input::placeholder,
.inputGroup textarea::placeholder { color: #7c899a; }

.inputGroup textarea { resize: vertical; min-height: 90px; }

/* Geo helpers */
.geolocationGroup { display: flex; gap: 0.55rem; align-items: stretch; }
.geolocationGroup input { flex: 1; }
.geolocationButton {
  min-width: 44px;
  display: inline-flex; align-items: center; justify-content: center;
  border: 1px solid rgba(59,130,246,0.5);
  background: linear-gradient(180deg, rgba(59,130,246,0.9), rgba(37,99,235,0.9));
  color: #fff;
  border-radius: 0.55rem;
  padding: 0.5rem 0.75rem;
  cursor: pointer;
  transition: transform 140ms ease, background-color 140ms ease, border-color 140ms ease;
}
.geolocationButton:hover:not(:disabled) {
  transform: translateY(-1px);
  background: linear-gradient(180deg, rgba(59,130,246,1), rgba(37,99,235,1));
  border-color: rgba(59,130,246,0.7);
}
.geolocationButton:disabled { opacity: 0.6; cursor: not-allowed; }

/* ===== PAGINATION ===== */
.paginationContainer {
  display: flex; justify-content: center; align-items: center;
  gap: 1rem; margin-top: 1.6rem;
}
.paginationButton {
  background: linear-gradient(180deg, rgba(255,255,255,0.12), rgba(255,255,255,0.06));
  border: 1px solid rgba(255,255,255,0.26);
  color: #f3f4f6;
  padding: 0.5rem 1.1rem;
  border-radius: 0.6rem;
  font-weight: 800;
  cursor: pointer;
  transition: background 160ms ease, transform 160ms ease;
}
.paginationButton:hover:not(:disabled) {
  background: rgba(255,255,255,0.18);
  transform: translateY(-1px);
}
.paginationButton:disabled { opacity: 0.5; cursor: not-allowed; }
.pageIndicator { color: #e5e7eb; font-weight: 800; letter-spacing: 0.3px; }

/* ===== Responsive modal paddings ===== */
@media (max-width: 640px) {
  .modalContent { max-width: 100%; margin: 1rem; }
  .modalHeader, .modalBody, .modalFooter { padding: 1rem; }
  .modalFooter { flex-direction: column; }
  .modalButton { width: 100%; }
}

/* ===== Motion reduce ===== */
@media (prefers-reduced-motion: reduce) {
  .locationCard,
  .locationCardImage,
  .locationCardEditBtn,
  .modalContent,
  .modalOverlay,
  .modalButton,
  .geolocationButton,
  .paginationButton {
    transition: none !important;
    animation: none !important;
  }
}
/* ---- FIX scroll modale pe mobil ---- */

/* Folosește înălțime dinamică a viewport-ului pe mobile */
.modalOverlay {
  position: fixed;
  inset: 0;
  height: 100dvh;            /* iOS/Android friendly */
}

/* Containerul modalului: flex col, cu limită pe înălțime și fără să taie scroll-ul intern */
.modalContent {
  display: flex;
  flex-direction: column;
  max-height: 92dvh;         /* puțin mai mult decât 90vh pentru mobile */
  width: 100%;
  max-width: 500px;
}

/* Cheia: în flex container, ca să permită copilului să devină zonă de scroll */
.formWrapper {
  flex: 1;
  display: flex;
  flex-direction: column;
  min-height: 0;             /* IMPORTANT: altfel nu se scrollează */
  overflow: hidden;          /* păstrăm hidden aici... */
}

/* ...dar facem body-ul modalului zona reală de scroll */
.modalBody {
  flex: 1;
  min-height: 0;             /* permite shrink în flex */
  overflow-y: auto;          /* scroll vertical */
  -webkit-overflow-scrolling: touch; /* inerție pe iOS */
  overscroll-behavior: contain;
}

/* Footer-ul rămâne fix la bază, nu intră în scroll */
.modalFooter {
  flex-shrink: 0;
}

/* Variante foarte mici de ecran */
@media (max-width: 640px) {
  .modalContent {
    max-width: 100%;
    margin: 1rem;
    max-height: 96dvh;
  }
}